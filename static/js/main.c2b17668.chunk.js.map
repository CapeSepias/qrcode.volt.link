{"version":3,"sources":["pages/App.module.css","locales lazy /^/.//.*/.ftl$/ groupOptions: {} namespace object","fluent/Localized.js","pages/App.js","fluent/l10n.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Localized","props","elems","br","Fragment","children","App","className","classes","app","href","target","rel","locales","de","en","_supportedLocales_","_defaultLocale_","fetchMessages","locale","a","path","fetch","default","response","text","messages","FluentResource","createMessagesGenerator","currentLocales","all","fetched","reduce","obj","cur","assign","generateBundles","bundle","FluentBundle","addResource","f","AppLocalizationProvider","userLocales","onLocaleChange","useState","ReactLocalization","getDefaultBundles","bundles","setBundles","useEffect","negotiateLanguages","defaultLocale","new_bundles","supportedLocales","loadBundles","l10n","AppLanguageWrapper","navigator","languages","setUserLocales","currentLocale","setCurrentLocale","window","umami","systemLocales","Array","isArray","language","toLowerCase","split","trackEvent","handleLanguageChange","useCallback","event","dataset","handleCurrentLocalesChange","length","onLanguageChange","domains","frontend","backend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2b17668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3hbGO\"};","var map = {\n\t\"./de.ftl\": [\n\t\t51,\n\t\t3\n\t],\n\t\"./en.ftl\": [\n\t\t52,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 47;\nmodule.exports = webpackAsyncContext;","import React from 'react'\nimport {\n  Localized as LocalizedOriginal,\n  // withLocalization,\n} from '@fluent/react'\nimport { negotiateLanguages } from '@fluent/langneg'\n\nimport { FluentContext } from '../../node_modules/@fluent/react/esm/context.js'\n\nconst Localized = props => (\n  <LocalizedOriginal\n    key={props.id}\n    {...props}\n    elems={{\n      br: <br />,\n      ...props.elems,\n    }}\n  >\n    <React.Fragment>{props.children}</React.Fragment>\n  </LocalizedOriginal>\n)\n\n// A custom withLocalization to have an empty fallback.\n// It is nearly identical to the original.\nfunction withLocalization(Inner) {\n  function WithLocalization(props) {\n    const l10n = React.useContext(FluentContext)\n\n    const getString = (id, args, fallback) => l10n.getString(id, args, fallback || ' ')\n\n    const fluentByObject = (object, fallback) => {\n      if (!(!!fallback)) {\n        fallback = null\n      }\n\n      if (!!object) {\n        const globalSupportedLocales = l10n.supportedLocales || []\n        const thisSupportedLocales = Object.keys(object).filter(locale => globalSupportedLocales.includes(locale))\n\n        const currentLocales = negotiateLanguages(\n          l10n.userLocales,\n          thisSupportedLocales,\n          { defaultLocale: l10n.defaultLocale }\n        )\n\n        for (const locale of currentLocales) {\n          if (!!object[locale]) {\n            return object[locale]\n          }\n        }\n\n        return fallback\n      }\n\n      return fallback\n    }\n\n    return React.createElement(Inner, { fluentByObject, getString, ...props })\n  }\n  return WithLocalization\n}\n\nexport {\n  withLocalization,\n  Localized,\n  Localized as default,\n}\n\n/*\n\nimport { Localized, withLocalization } from '../Localized/'\n\n<Localized id=\"translation_id\" />\nexport default withLocalization(componentName)\n\n\nimport Localized from '../Localized/'\n<Localized id=\"translation_id\" />\n\nimport { withLocalization } from '@fluent/react'\nexport default withLocalization(componentName)\n\n*/\n","import classes from './App.module.css'\n\nimport Localized from '../fluent/Localized.js'\n\nfunction App() {\n  return (<>\n    <div className={classes.app}>\n    </div>\n    <footer>\n      <a href=\"mailto:thomas.rosen@volteuropa.org\"><Localized id=\"contact\" /></a>\n      &nbsp; • &nbsp;\n      <a href=\"https://github.com/voltbonn/qrcode.volt.link\" target=\"_blank\" rel=\"noreferrer\"><Localized id=\"source_code\" /></a>\n    </footer>\n  </>)\n}\n\nexport default App\n","import React, { useEffect, useState } from 'react'\n\n// https://projectfluent.org/play/\n\n// import { LocalizationProvider, Localized } from '@fluent/react' // '@fluent/react/compat'\nimport { ReactLocalization, LocalizationProvider } from '@fluent/react'\nimport { FluentBundle, FluentResource } from '@fluent/bundle'\nimport { negotiateLanguages } from '@fluent/langneg'\n\n\nexport const locales = {\n  de: 'Deutsch',\n  en: 'English',\n  // es: 'Español',\n  // pt: 'Português',\n  // fr: 'Français',\n  // it: 'Italiano',\n  // nl: 'Dutch',\n  // pl: 'Polska',\n  // ru: 'Pусский',\n}\n\nconst _supportedLocales_ = Object.keys(locales)\nconst _defaultLocale_ = 'en'\n\n\nasync function fetchMessages(locale) {\n  const path = await import('../locales/' + locale + '.ftl')\n\n  const response = await fetch(path.default)\n  const messages = await response.text()\n\n  return { [locale]: new FluentResource(messages) }\n}\n\nfunction getDefaultBundles() {\n  const bundle = new FluentBundle('')\n  bundle.addResource(new FluentResource(''))\n  return new ReactLocalization([bundle])\n}\n\nasync function createMessagesGenerator(currentLocales) {\n  const fetched = await Promise.all(\n    currentLocales.map(fetchMessages)\n  )\n  const messages = fetched.reduce(\n    (obj, cur) => Object.assign(obj, cur)\n  )\n\n  return function* generateBundles() {\n    for (const locale of currentLocales) {\n      const bundle = new FluentBundle(locale)\n      bundle.addResource(messages[locale])\n      yield bundle\n    }\n  }\n}\n\nexport function AppLocalizationProvider({ userLocales, children, onLocaleChange }) {\n  const [bundles, setBundles] = useState(getDefaultBundles())\n\n  useEffect(() => {\n    async function loadBundles() {\n      const currentLocales = negotiateLanguages(\n        userLocales,\n        _supportedLocales_,\n        { defaultLocale: _defaultLocale_ }\n      )\n\n      if (!!onLocaleChange) {\n        onLocaleChange(currentLocales)\n      }\n\n      const generateBundles = await createMessagesGenerator(currentLocales)\n\n      const new_bundles = new ReactLocalization(generateBundles())\n      new_bundles.userLocales = userLocales\n      new_bundles.defaultLocale = _defaultLocale_\n      new_bundles.supportedLocales = _supportedLocales_\n      setBundles(new_bundles)\n    }\n    loadBundles()\n  }, [userLocales, onLocaleChange])\n\n  if (!bundles) {\n    // Show a loader.\n    return <div>Loading texts…</div>\n  }\n\n  return <LocalizationProvider l10n={bundles}>\n    {children}\n  </LocalizationProvider>\n}\n\n","import React, { useState, useEffect, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './pages/App.js'\n// import reportWebVitals from './reportWebVitals'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport 'intl-pluralrules'\nimport { AppLocalizationProvider, locales } from './fluent/l10n.js'\n\nwindow.domains = {\n  frontend: 'https://qrcode.volt.link',\n  // frontend: 'http://localhost:3000/',\n  backend: 'https://volt.link/',\n  // backend: 'http://localhost:4000/',\n}\n\nfunction AppLanguageWrapper() {\n  // const [userLocales, setUserLocales] = useState(['de'])\n  const [userLocales, setUserLocales] = useState(navigator.languages)\n  const [currentLocale, setCurrentLocale] = useState(null)\n\n  useEffect(() => {\n    if (!!window.umami) {\n      let systemLocales = navigator.languages\n      if (!!systemLocales || Array.isArray(systemLocales)) {\n        for (let locale of systemLocales) {\n          locale = locale.toLowerCase() // Not really correct but the system locales sadly don't conform to the standard.\n\n          const language = locale.split('-')[0]\n          if (language !== locale) {\n            window.umami.trackEvent('L: ' + language) // Log just the language.\n          }\n          window.umami.trackEvent('L: ' + locale) // Log the full locale.\n        }\n      }\n    }\n  }, [])\n\n  const handleLanguageChange = useCallback(event => {\n    setUserLocales([event.target.dataset.locale])\n  }, [setUserLocales])\n\n  const handleCurrentLocalesChange = useCallback(currentLocales => {\n    setCurrentLocale(currentLocales.length > 0 ? currentLocales[0] : '')\n  }, [setCurrentLocale])\n\n  return <AppLocalizationProvider\n    key=\"AppLocalizationProvider\"\n    userLocales={userLocales}\n    onLocaleChange={handleCurrentLocalesChange}\n  >\n    <App locales={locales} currentLocale={currentLocale} onLanguageChange={handleLanguageChange} />\n  </AppLocalizationProvider>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AppLanguageWrapper />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}